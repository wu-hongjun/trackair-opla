
#include <Arduino_MKRIoTCarrier.h>
#include <Arduino_MKRIoTCarrier_Buzzer.h>
#include <Arduino_MKRIoTCarrier_Qtouch.h>
#include <Arduino_MKRIoTCarrier_Relay.h>

#include <Arduino_MKRIoTCarrier.h>
MKRIoTCarrier carrier;


float temperature = 0;
float humidity = 0;
bool showMainScreen = true;


uint32_t greenColor = carrier.leds.Color(255,0,0);
uint32_t redColor = carrier.leds.Color(0,255,0);
uint32_t blueColor = carrier.leds.Color(0,0,255);
uint32_t whiteColor = carrier.leds.Color(255,255,255);
uint32_t blackColor = carrier.leds.Color(0,0,0);

void setup() {
  bool CARRIER_CASE = true;

  Serial.begin(9600);

  carrier.begin();
  carrier.display.setRotation(2);

  carrier.leds.setBrightness(10);
  carrier.leds.fill(whiteColor, 0, 5);
  carrier.leds.show();
}

void loop() {

  temperature = carrier.Env.readTemperature();
  humidity = carrier.Env.readHumidity();

  carrier.Buttons.update();

  Serial.print("Temperature = ");
  Serial.print(temperature);
  Serial.println(" Â°C");

  Serial.print("Humidity = ");
  Serial.print(humidity);
  Serial.println(" %");

  if (showMainScreen == true){
    printMainScreen();
  }

  //function to print out values
if (carrier.Button4.getTouch()) {
    showMainScreen = false;
    //taskOnTouchButton4();
    printHumidity();
  }

  if (carrier.Button3.getTouch()) {
    showMainScreen = false;
    //taskOnTouchButton3();
    printTemperature();
  }
  
  if (carrier.Button2.getTouch()) {
    showMainScreen = false;
    //taskOnTouchButton2();
    printTemperature();
  }
  
  if (carrier.Button1.getTouch()) {
    showMainScreen = false;
    // taskOnTouchButton1();
    printHumidity();
  }

  if (carrier.Button0.getTouch()) {
    showMainScreen = false;
    // taskOnTouchButton0();
    printTemperature();
  }
}

// Wrapper Functions

void taskOnTouchButton0(){
  printTemperature();

  carrier.leds.setPixelColor(0, redColor);
  carrier.leds.show();
  carrier.leds.clear();
}

void taskOnTouchButton1(){
  printHumidity();

  carrier.leds.setPixelColor(1, redColor);
  carrier.leds.show();
  carrier.leds.clear();
}

void taskOnTouchButton2(){
  printTemperature();

  carrier.leds.setPixelColor(2, redColor);
  carrier.leds.show();
  carrier.leds.clear();
}

void taskOnTouchButton3(){
  printHumidity();

  carrier.leds.setPixelColor(3, redColor);
  carrier.leds.show();
  carrier.leds.clear();
}

void taskOnTouchButton4(){
  printTemperature();

  carrier.leds.setPixelColor(4, redColor);
  carrier.leds.show();
  carrier.leds.clear();
}

// Main Screen

void printMainScreen() {
  carrier.display.fillScreen(ST77XX_RED); //red background
  carrier.display.setTextColor(ST77XX_WHITE); //white text
  carrier.display.setTextSize(2); //medium sized text

  carrier.display.setCursor(30, 110); //sets position for printing (x and y)
  carrier.display.print("Main");
  carrier.display.print(temperature);
  carrier.display.println(" C");

}

// Actual Functions

void printTemperature() {
  carrier.display.fillScreen(ST77XX_RED); //red background
  carrier.display.setTextColor(ST77XX_WHITE); //white text
  carrier.display.setTextSize(2); //medium sized text

  carrier.display.setCursor(30, 110); //sets position for printing (x and y)
  carrier.display.print("Temp: ");
  carrier.display.print(temperature);
  carrier.display.println(" C");

}

void printHumidity() {
  carrier.display.fillScreen(ST77XX_BLUE); //red background
  carrier.display.setTextColor(ST77XX_WHITE); //white text
  carrier.display.setTextSize(2); //medium sized text

  carrier.display.setCursor(30, 110); //sets new position for printing (x and y)
  carrier.display.print("Humi: ");
  carrier.display.print(humidity);
  carrier.display.println(" %");
}